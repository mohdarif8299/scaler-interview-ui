{"version":3,"sources":["logo.svg","services/ApiUtil.js","components/meeting-component.js","components/all-meetings-component.js","components/app-header.js","components/update-meeting.js","App.js","reportWebVitals.js","index.js"],"names":["BASE_URL","request","options","defaults","headers","Headers","Object","assign","fetch","url","then","response","json","ok","Promise","reject","getAvailableParticipants","startTime","endTime","method","Meeting","history","useHistory","useState","agenda","setAgenda","startTimeHour","setStartTimeHour","endTimeHour","setEndTimeHour","startTimeMinute","setStartTimeMinute","endTimeMinute","setEndTimeMinute","setStartTime","loading","setLoading","setEndTime","count","setCount","participants","setParticipants","participantOne","setParticipantOne","participantTwo","setParticipantTwo","hours","minutes","getAllAvailableparticipants","data","console","log","useEffect","handleParticipant","e","target","checked","value","alert","updated","validate","meeting","body","JSON","stringify","push","className","onChange","placeholder","required","v","map","h","k","p","htmlFor","emailId","id","type","disabled","onClick","preventDefault","AllMeeting","setMeeting","style","boxShadow","borderRadius","allMeetings","deleteMeeting","meetingId","deleteMeetingByMeetingId","m","key","to","pathname","state","Header","UpdateMeeting","useLocation","setMeetingId","p1","setP1","p2","setP2","setInitialStartTime","setInitialEndTime","forEach","item","charAt","updateMeeting","withRouter","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d20b05e4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// let BASE_URL = \"http://localhost:8080/v1\";\r\nlet BASE_URL = \"https://stormy-taiga-71292.herokuapp.com/v1\";\r\nconst request = (options) => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n    const defaults = { headers: headers };\r\n    options = Object.assign({}, defaults, options);\r\n  \r\n    return fetch(options.url, options).then((response) =>\r\n      response.json().then((json) => {\r\n        if (!response.ok) {\r\n          return Promise.reject(json);\r\n        }\r\n        return json;\r\n      })\r\n    );\r\n  };\r\n  export function getAllMeetings() {\r\n   \r\n    return request({\r\n      url: BASE_URL + \"/findAll\",\r\n      method: \"GET\",\r\n    });\r\n  }\r\n  export function getAvailableParticipants(startTime,endTime) {\r\n      return request({\r\n        url: BASE_URL + \"/getusers?startTime=\"+startTime+'&endTime='+endTime,\r\n        method: \"GET\",\r\n      })\r\n  }\r\n  export function deleteMeetingByMeetingId(meetingId) {\r\n    return request({\r\n      url: BASE_URL + \"/delete/\"+meetingId,\r\n      method: \"DELETE\",\r\n    })\r\n}\r\nexport function updateMeeting(meeting) {\r\n    return request({\r\n      url: BASE_URL + \"/update\",\r\n      body:JSON.stringify(meeting),\r\n      method: \"PUT\",\r\n    })\r\n}\r\nexport function saveMeeting(meeting) {\r\n    return request({\r\n      url: BASE_URL + \"/save\",\r\n      body:JSON.stringify(meeting),\r\n      method: \"POST\",\r\n    })\r\n}","import React, { useEffect, useRef, useState } from 'react';\r\nimport { getAvailableParticipants, saveMeeting } from \"../services/ApiUtil\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport './meeting-component.css';\r\n\r\nconst Meeting=()=>{\r\n    let history = useHistory();\r\n    const [agenda,setAgenda] = useState('');\r\n    let [startTimeHour,setStartTimeHour] = useState('00');\r\n    let [endTimeHour,setEndTimeHour] = useState('01');\r\n    let [startTimeMinute,setStartTimeMinute] = useState('00');\r\n    let [endTimeMinute,setEndTimeMinute] = useState('00');\r\n    let [startTime,setStartTime] = useState('00:00');\r\n    const [loading,setLoading] = useState(false);\r\n    let [endTime,setEndTime] = useState('01:00');\r\n    let [count,setCount] = useState(0);\r\n    let [participants,setParticipants] = useState([]);\r\n    let [participantOne,setParticipantOne] = useState(null);\r\n    let [participantTwo,setParticipantTwo] = useState(null);\r\n    const hours = ['00','01','02','03','04','05','06','07','08','09','10','11','12','13','14','15','16','17','18','19','20','21','22','23'];\r\n    const minutes = ['00','05','10','15','20','25','30','35','40','45','50','55'];\r\n    \r\n    const getAllAvailableparticipants = (startTime,endTime)=> {\r\n      getAvailableParticipants(startTime,endTime).then((data) => {\r\n        console.log(\"Data \",data);\r\n        setParticipants(data);\r\n      });\r\n    }\r\n    \r\n    useEffect(()=>{\r\n      startTime = startTimeHour+\":\"+startTimeMinute;  \r\n      endTime = endTimeHour+\":\"+endTimeMinute;\r\n      setStartTime(startTimeHour+\":\"+startTimeMinute);\r\n        setEndTime(endTimeHour+\":\"+endTimeMinute)\r\n        getAllAvailableparticipants(startTime,endTime);\r\n    },[]);\r\n\r\n    const Meeting = {\r\n      agenda,\r\n      startTime,\r\n      endTime,\r\n      participantOne,\r\n      participantTwo\r\n    }\r\n\r\n    const handleParticipant=(e)=>{\r\n     \r\n      if(e.target.checked===false) {\r\n            count-=1;\r\n            setCount(count);\r\n           if(participantOne===e.target.value) {\r\n             participantOne = null;\r\n             setParticipantOne(null);\r\n           }  else if(participantTwo===e.target.value) {\r\n            participantTwo = null;\r\n            setParticipantTwo(null);\r\n           }\r\n\r\n      } else {\r\n       \r\n        if(count>2) {\r\n          e.target.checked = !e.target.checked;\r\n         alert('Only Two Allowed At A Time');\r\n         return ;\r\n       }\r\n\r\n        count+=1;\r\n        setCount(count); \r\n        if(participantOne===null) { \r\n          let updated = e.target.value;  \r\n          participantOne = updated;\r\n            setParticipantOne(e.target.value);\r\n        }\r\n        else if(participantTwo===null) {\r\n          let updated = e.target.value;  \r\n          participantTwo = updated;\r\n            setParticipantTwo(participantTwo) \r\n        }\r\n      }\r\n    }\r\n    const validate=()=>{\r\n      if(startTime>endTime) {\r\n        alert('InValid Interview Time  '+startTime+' '+endTime);\r\n      } else if(participantOne==null || participantTwo==null) {\r\n        alert('Meeting Must have Two Participant')\r\n      }\r\n      else if(agenda==='') {\r\n        alert('Meeting Agenda cant be blank');\r\n      } else {\r\n        console.log(Meeting);\r\n        setLoading(true)\r\n        saveMeeting(Meeting).then(()=>{\r\n          setLoading(false);\r\n          history.push('/');\r\n        });\r\n        //history.push('/')\r\n      }\r\n    }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <p><b>Schedule a New Interview</b></p>\r\n      <form>\r\n      \r\n            <p><b>Meeting Agenda</b> &nbsp;&nbsp;&nbsp; <input className=\"inpt-agenda\" onChange={(e)=>{\r\n              setAgenda(e.target.value)\r\n            }} placeholder='Enter here' required></input></p>\r\n            <p><b>Interview Start Time &nbsp;&nbsp;&nbsp;&nbsp;\r\n               <select value={startTimeHour} onChange={(v)=>{\r\n                 let updated = v.target.value;\r\n                 startTimeHour = updated;\r\n                 setStartTimeHour(updated);\r\n                 startTime = startTimeHour+\":\"+startTimeMinute;\r\n                 setStartTime(startTimeHour+\":\"+startTimeMinute);\r\n                 getAllAvailableparticipants(startTime,endTime);\r\n               }}>{hours.map((h,k)=>{\r\n                 return <option key={k}>{h}</option>\r\n               })}</select> \r\n            &nbsp;&nbsp;Hour\r\n            &nbsp;&nbsp;&nbsp;&nbsp; \r\n            <select value={startTimeMinute} onChange={(v)=>{\r\n                let updated = v.target.value;\r\n                startTimeMinute = updated;\r\n               startTime = startTimeHour+\":\"+startTimeMinute;\r\n                setStartTimeMinute(v.target.value);\r\n               setStartTime(startTimeHour+\":\"+startTimeMinute);\r\n               getAllAvailableparticipants(startTime,endTime);\r\n            }} >{minutes.map((h,k)=>{\r\n                 return <option key={k} >{h}</option>\r\n               })}</select> &nbsp;&nbsp;Minute\r\n            &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;  <span>Interview Start Time, </span> {startTime}\r\n       <br/><br/>   \r\n     Interview End Time &nbsp;&nbsp;&nbsp;&nbsp; \r\n     <select value={endTimeHour} onChange={(v)=>{\r\n        let updated = v.target.value;\r\n        endTimeHour = updated;\r\n        setEndTimeHour(updated);\r\n        endTime = endTimeHour+\":\"+endTimeMinute;\r\n        setEndTime(endTimeHour+\":\"+endTimeMinute);\r\n        getAllAvailableparticipants(startTime,endTime);\r\n     }}>{hours.map((h,k)=>{\r\n                 return <option key={k}>{h}</option>\r\n               })}</select> &nbsp;&nbsp;Hour\r\n            &nbsp;&nbsp;&nbsp;&nbsp; \r\n          \r\n          \r\n          <select value={endTimeMinute} onChange={(v)=>{\r\n             \r\n             let updated = v.target.value;\r\n                endTimeMinute = updated;\r\n               setEndTimeMinute(updated);\r\n               endTime = endTimeHour+\":\"+endTimeMinute;\r\n               setEndTime(endTimeHour+\":\"+endTimeMinute);\r\n               getAllAvailableparticipants(startTime,endTime);\r\n            }}>{minutes.map((h,k)=>{\r\n                 return <option key={k}>{h}</option>\r\n               })}</select> &nbsp;&nbsp;Minute\r\n                &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;   <span>Interview End Time, </span> {endTime}\r\n        </b>\r\n      </p>    \r\n     <div>\r\n      <p><b>Available Users/Participants</b></p>\r\n      \r\n      {\r\n        \r\n        participants.map((p,k)=>{\r\n          return (\r\n            <div className=\"participant mb-2\" key={k}>\r\n              <label htmlFor={k}>{p.emailId}</label>\r\n              <input id={k} type='checkbox' value={p.emailId}  onChange={handleParticipant}/>\r\n            </div>\r\n          )\r\n        })\r\n\r\n      }\r\n      </div>\r\n\r\n            <button className='btn btn-primary col-12' disabled={loading} onClick={(e)=>{e.preventDefault();validate();}}><b>Schedule Interview</b></button>\r\n      \r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default Meeting;","import React, { useEffect, useState } from 'react';\r\nimport { getAllMeetings,deleteMeetingByMeetingId } from '../services/ApiUtil';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AllMeeting=()=>{\r\n  const [open,setOpen] = useState(false);\r\n  const [meeting, setMeeting] = useState([]);\r\n  const style = {\r\n      boxShadow:\"#dadada 0px 1px 2px 1px\",\r\n      borderRadius:\"0px\"\r\n\r\n  }\r\n \r\n  const allMeetings = () => {\r\n    getAllMeetings().then((data) => {\r\n      console.log(\"Data \",data);\r\n      setMeeting(data);\r\n    });\r\n  };\r\n\r\n  const deleteMeeting=(meetingId)=>{\r\n    deleteMeetingByMeetingId(meetingId).then((data)=>{\r\n      console.log(data);     \r\n      allMeetings();\r\n    });\r\n  }\r\n  const handleMeetingDelete=(e)=>{\r\n    console.log(e);\r\n    deleteMeeting(e);\r\n  }\r\n\r\n  useEffect(()=>{\r\n    allMeetings();\r\n  },[])\r\n  return (\r\n   <div className='container'>\r\n       {meeting.map((m,key) => {\r\n                    return (\r\n                      <div className=\"col-md-12 p-2 m-2\" style={style} key={key}>\r\n                        <div>\r\n                            <p>Interview Agenda: <b>{m.agenda} </b></p> \r\n                        </div>\r\n                        <div>\r\n                            <p><b>Participant 1 </b>: <span>{m.participantOne}</span> \r\n                            &nbsp; &nbsp; &nbsp; &nbsp;\r\n                            <b>Participant 2 </b>: <span>{m.participantTwo}</span> \r\n                            </p>\r\n                        </div>\r\n                        <div>\r\n                            <p><b>Interview Start Time </b>: <span>{m.startTime}</span> \r\n                            &nbsp; &nbsp; &nbsp; &nbsp;\r\n                            <b>Interview End Time</b>: <span>{m.endTime}</span> \r\n                            </p>\r\n                        </div>\r\n                        <Link \r\n                         to={{\r\n                          pathname: \"/update\",\r\n                          state: {\r\n                            meeting:m\r\n                          },\r\n                        }}\r\n                        className=\"btn btn-secondary\" ><b>Reschedule</b></Link>\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; \r\n                        <button className=\"btn btn-danger\" onClick={()=>{\r\n                        handleMeetingDelete(m.meetingId);\r\n                        }}><b>Delete</b></button>\r\n                      </div>\r\n                    );\r\n         })}\r\n   </div>\r\n  );\r\n}\r\nexport default AllMeeting;","import React from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Header=()=>{\r\n  let history = useHistory();\r\n  return (\r\n    <div className='p-2 m-3'>\r\n      <button onClick={()=>{history.push('/scaler-interview-ui/')}} className=\"btn btn-primary\"><b>All Interviews</b></button> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n      <button onClick={()=>{history.push('/scaler-interview-ui/create-meeting')}} className=\"btn btn-secondary\" ><b>Schedule New Interview</b></button>\r\n    </div>\r\n  );\r\n}\r\nexport default Header;","import React, { useEffect, useState } from 'react';\r\nimport { getAvailableParticipants, updateMeeting } from \"../services/ApiUtil\";\r\nimport { useHistory, useParams,useLocation } from 'react-router-dom'\r\nimport './meeting-component.css';\r\n\r\nconst UpdateMeeting=()=>{\r\n    const location = useLocation()\r\n    const { meeting } = location.state;\r\n    const [meetingId,setMeetingId] = useState('');\r\n    let history = useHistory();\r\n    const [agenda,setAgenda] = useState('');\r\n    let [loading,setLoading] = useState(false);\r\n    let [p1,setP1] = useState(null);\r\n    let [p2,setP2] = useState(null);\r\n    let [initialStartTime,setInitialStartTime] = useState('');\r\n    let [initialEndTime,setInitialEndTime] = useState('');\r\n    let [startTimeHour,setStartTimeHour] = useState('00');\r\n    let [endTimeHour,setEndTimeHour] = useState('01');\r\n    let [startTimeMinute,setStartTimeMinute] = useState('00');\r\n    let [endTimeMinute,setEndTimeMinute] = useState('00');\r\n    let [startTime,setStartTime] = useState('00:00');\r\n    let [endTime,setEndTime] = useState('01:00');\r\n    let [count,setCount] = useState(0);\r\n    let [participants,setParticipants] = useState([]);\r\n    let [participantOne,setParticipantOne] = useState(null);\r\n    let [participantTwo,setParticipantTwo] = useState(null);\r\n    const hours = ['00','01','02','03','04','05','06','07','08','09','10','11','12','13','14','15','16','17','18','19','20','21','22','23'];\r\n    const minutes = ['00','05','10','15','20','25','30','35','40','45','50','55'];\r\n    \r\n    const getAllAvailableparticipants = (startTime,endTime)=> {\r\n      getAvailableParticipants(startTime,endTime).then((data) => {\r\n        console.log(\"Data Chagned \",data);\r\n        participants = data;\r\n        setParticipants(participants);\r\n         p1 = null;\r\n         p2 = null;\r\n      \r\n                  data.forEach((item) => {\r\n                      console.log(item);\r\n                      if (item.emailId === participantOne) {\r\n                          p1 = item.emailId;\r\n                          setP1(p1);\r\n                      }\r\n                       if(item.emailId === participantTwo) {\r\n                           p2 = item.emailId;\r\n                           setP2(p2);\r\n                      }\r\n                  });\r\n\r\n         console.log(p1+\"    \"+p2);\r\n\r\n      });\r\n     \r\n    }\r\n    useEffect(()=>{\r\n        \r\n        \r\n        setMeetingId(meeting.meetingId);\r\n        setAgenda(meeting.agenda);\r\n        participantOne = meeting.participantOne;\r\n        participantTwo = meeting.participantTwo;\r\n        setP1(participantOne);\r\n        setP2(participantTwo);\r\n        setParticipantOne(participantOne);\r\n        setParticipantTwo(participantTwo);\r\n        startTime = meeting.startTime;\r\n        endTime = meeting.endTime;\r\n        initialStartTime = startTime;\r\n        setInitialStartTime(initialStartTime);\r\n        initialEndTime = endTime;\r\n        setInitialEndTime(initialEndTime);\r\n        setStartTime(startTime);\r\n        setEndTime(endTime);\r\n        startTimeHour=startTime.charAt(0)+startTime.charAt(1);\r\n        setStartTimeHour(startTimeHour);\r\n        startTimeMinute = startTime.charAt(3)+startTime.charAt(4)\r\n        setStartTimeMinute(startTimeMinute);\r\n        endTimeHour = endTime.charAt(0)+endTime.charAt(1);\r\n        setEndTimeHour(endTimeHour);\r\n        endTimeMinute = endTime.charAt(3)+endTime.charAt(4)\r\n        setEndTimeMinute(endTimeMinute);\r\n        console.log(meeting);\r\n\r\n     //   console.log(\"Meeting ID\",props.meeting.meetingId);\r\n      startTime = startTimeHour+\":\"+startTimeMinute;  \r\n      endTime = endTimeHour+\":\"+endTimeMinute;\r\n      setStartTime(startTimeHour+\":\"+startTimeMinute);\r\n      setEndTime(endTimeHour+\":\"+endTimeMinute)\r\n      getAllAvailableparticipants(startTime,endTime);\r\n    },[]);\r\n\r\n    const Meeting = {\r\n      meetingId,\r\n      agenda,\r\n      startTime,\r\n      endTime,\r\n      participantOne,\r\n      participantTwo\r\n    }\r\n\r\n  \r\n    const validate=()=>{\r\n      if(startTime>endTime) {\r\n        alert('InValid Interview Time  '+startTime+' '+endTime);\r\n      } else if(p1==null || p2==null) {\r\n        alert('Meeting Must have Two Participant')\r\n      }\r\n      else if(agenda==='') {\r\n        alert('Meeting Agenda cant be blank');\r\n      } else {\r\n          setLoading(true);\r\n        updateMeeting(Meeting).then((data)=>{\r\n            setLoading(false);\r\n            console.log(data);history.push(\"/\");\r\n        });\r\n        console.log(Meeting);\r\n      }\r\n    }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <p><b>Schedule a New Interview</b></p>\r\n      <form>\r\n      \r\n            <p><b>Meeting Agenda</b> &nbsp;&nbsp;&nbsp; <input value={agenda} className=\"inpt-agenda\" onChange={(e)=>{\r\n              setAgenda(e.target.value)\r\n            }} placeholder='Enter here' required></input></p>\r\n            <p><b>Interview Start Time &nbsp;&nbsp;&nbsp;&nbsp;\r\n               <select value={startTimeHour} onChange={(v)=>{\r\n                 let updated = v.target.value;\r\n                 startTimeHour = updated;\r\n                 setStartTimeHour(updated);\r\n                 startTime = startTimeHour+\":\"+startTimeMinute;\r\n                 setStartTime(startTimeHour+\":\"+startTimeMinute);\r\n                 getAllAvailableparticipants(startTime,endTime);\r\n               }}>{hours.map((h,k)=>{\r\n                 return <option key={k}>{h}</option>\r\n               })}</select> \r\n            &nbsp;&nbsp;Hour\r\n            &nbsp;&nbsp;&nbsp;&nbsp; \r\n            <select value={startTimeMinute} onChange={(v)=>{\r\n                let updated = v.target.value;\r\n                startTimeMinute = updated;\r\n               startTime = startTimeHour+\":\"+startTimeMinute;\r\n                setStartTimeMinute(v.target.value);\r\n               setStartTime(startTimeHour+\":\"+startTimeMinute);\r\n               getAllAvailableparticipants(startTime,endTime);\r\n            }} >{minutes.map((h,k)=>{\r\n                 return <option key={k} >{h}</option>\r\n               })}</select> &nbsp;&nbsp;Minute\r\n            &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;  <span>Interview Start Time, </span> {startTime}\r\n       <br/><br/>   \r\n     Interview End Time &nbsp;&nbsp;&nbsp;&nbsp; \r\n     <select value={endTimeHour} onChange={(v)=>{\r\n        let updated = v.target.value;\r\n        endTimeHour = updated;\r\n        setEndTimeHour(updated);\r\n        endTime = endTimeHour+\":\"+endTimeMinute;\r\n        setEndTime(endTimeHour+\":\"+endTimeMinute);\r\n        getAllAvailableparticipants(startTime,endTime);\r\n     }}>{hours.map((h,k)=>{\r\n                 return <option key={k}>{h}</option>\r\n               })}</select> &nbsp;&nbsp;Hour\r\n            &nbsp;&nbsp;&nbsp;&nbsp; \r\n          \r\n          \r\n          <select value={endTimeMinute} onChange={(v)=>{\r\n             \r\n             let updated = v.target.value;\r\n                endTimeMinute = updated;\r\n               setEndTimeMinute(updated);\r\n               endTime = endTimeHour+\":\"+endTimeMinute;\r\n               setEndTime(endTimeHour+\":\"+endTimeMinute);\r\n               getAllAvailableparticipants(startTime,endTime);\r\n            }}>{minutes.map((h,k)=>{\r\n                 return <option key={k}>{h}</option>\r\n               })}</select> &nbsp;&nbsp;Minute\r\n                &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;   <span>Interview End Time, </span> {endTime}\r\n        </b>\r\n      </p>    \r\n     \r\n     <div><p>\r\n         <b>Participant 1: {participantOne}</b>\r\n         &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; \r\n         <b>Participant 2: {participantTwo}</b>\r\n     </p></div>\r\n            <button className='btn btn-primary col-12' disabled={loading} onClick={(e)=>{e.preventDefault();validate();}}><b>ReSchedule Interview</b></button>\r\n      \r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default UpdateMeeting;","import logo from './logo.svg';\nimport './App.css';\nimport { Route, withRouter, Switch } from \"react-router-dom\";\nimport meeting from './components/meeting-component';\nimport Example from './components/all-meetings-component';\nimport AllMeeting from './components/all-meetings-component';\nimport Meeting from './components/meeting-component';\nimport Header from './components/app-header';\nimport UpdateMeeting from './components/update-meeting';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n          <div className=\"col-12\">\n            <Header></Header>\n            <Switch>\n               <Route\n                exact\n                path=\"/scaler-interview-ui\"\n                component={() => (\n                  <AllMeeting/>\n                )}\n              ></Route>\n              <Route\n                exact\n                path=\"/scaler-interview-ui/create-meeting\"\n                component={() => (\n                  <Meeting/>\n                )}\n              ></Route>\n               <Route\n                exact\n                path=\"/update\"\n                component={() => (\n                  <UpdateMeeting/>\n                )}\n              ></Route>\n              </Switch>\n          </div>\n      </div>\n    </div>\n  );\n}\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}